version: '3'
services:
  node:
    # Faz o docker construir (build) de uma imagem personalizada
    # baseada no arquivo Dockerfile
    build: 
      dockerfile: ./Dockerfile
      context: .
    # Nome do container para facilitar execução
    container_name: todolist_api
    # Restarta a imagem caso algo a faça parar
    restart: always
    # Diretório padrão de execução
    working_dir: /app
    # Lista de volumes (diretórios) mapeados de fora para dentro do container
    volumes:
      # Monta o diretório atual, com todos os dados da aplicação, dentro do diretório /app
      - ./:/app
    ports:
      # Expõe a porta padrão da aplicação: altere aqui caso use outra porta
      # na notação porta_de_fora:porta_de_dentro
      - 3001:3001
    environment:
      # Aqui setamos nossas variáveis de ambiente
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_HOST: database
      MYSQL_PORT: 3306
    # Informa ao docker, para que o container node seja iniciado após o container database
    depends_on:
      - "database"

  database:
    image: mysql:8.0.29
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: todolistdb
    ports:
      - "33060:3306"
    # a porta 3306 é a porta padrão do mysql, mas como já temos um container rodando nela,
    # precisamos mapear uma porta diferente para o container database
    # na notação porta_de_fora:porta_de_dentro
    volumes:
        - ./todolist_script.sql:/docker-entrypoint-initdb.d/todolist_script.sql